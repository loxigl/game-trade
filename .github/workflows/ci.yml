name: GameTrade CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort mypy
          pip install -r backend/shared/requirements.txt

      - name: Run flake8
        run: flake8 backend --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Run black
        run: black --check backend

      - name: Run isort
        run: isort --check-only --profile black backend

      - name: Run mypy
        run: mypy backend

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: gametrade
          POSTGRES_PASSWORD: gametrade
          POSTGRES_DB: gametrade_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      rabbitmq:
        image: rabbitmq:3.12-alpine
        env:
          RABBITMQ_DEFAULT_USER: gametrade
          RABBITMQ_DEFAULT_PASS: gametrade
        ports:
          - 5672:5672
        options: >-
          --health-cmd "rabbitmqctl status"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-asyncio
          pip install -r backend/shared/requirements.txt
          for dir in backend/*-svc/; do
            if [ -f "$dir/requirements.txt" ]; then
              pip install -r "$dir/requirements.txt"
            fi
          done

      - name: Run tests
        env:
          DATABASE_URL: postgresql://gametrade:gametrade@localhost:5432/gametrade_test
          REDIS_URL: redis://localhost:6379/0
          RABBITMQ_URL: amqp://gametrade:gametrade@localhost:5672/
          ENVIRONMENT: test
        run: |
          pytest backend --cov=backend --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false 