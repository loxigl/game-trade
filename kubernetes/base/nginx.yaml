apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: gametrade
  labels:
    app: nginx
spec:
  selector:
    app: nginx
  ports:
    - port: 80
      targetPort: 80
      name: http
    - port: 443
      targetPort: 443
      name: https
    - port: 8080
      targetPort: 8080
      name: monitoring
  type: LoadBalancer # В продакшн-среде будет использоваться с Ingress
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: gametrade
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    worker_rlimit_nofile 65535;
    
    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 4096;
        multi_accept on;
        use epoll;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        limit_req_zone $binary_remote_addr zone=api_limit:10m rate=5r/s;
        
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        '$request_time $upstream_response_time';
        
        access_log /var/log/nginx/access.log main;
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;
        
        client_body_buffer_size 10K;
        client_header_buffer_size 1k;
        client_max_body_size 8m;
        large_client_header_buffers 2 1k;
        
        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_http_version 1.1;
        gzip_min_length 256;
        
        include /etc/nginx/conf.d/*.conf;
    }
  
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        
        client_max_body_size 10M;
        client_body_timeout 12;
        client_header_timeout 12;
        
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";
        
        location /api/auth/ {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://auth-svc:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_buffering on;
            proxy_buffer_size 16k;
        }
        
        location /api/marketplace/ {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://marketplace-svc:8001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_buffering on;
            proxy_buffer_size 16k;
        }
        
        location /api/payments/ {
            limit_req zone=api_limit burst=5 nodelay;
            proxy_pass http://payment-svc:8002/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_buffering on;
            proxy_buffer_size 16k;
        }
        
        location /api/chat/ {
            limit_req zone=api_limit burst=50 nodelay;
            proxy_pass http://chat-svc:8003/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_buffering on;
            proxy_buffer_size 16k;
        }
        
        location /ws/ {
            proxy_pass http://chat-svc:8003/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
            proxy_send_timeout 300s;
        }
        
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "API Gateway is healthy\n";
        }
    }
    
  stub_status.conf: |
    server {
        listen 8080;
        server_name localhost;
        
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        access_log off;
        
        location /nginx_status {
            stub_status on;
        }
        
        location /metrics {
            proxy_pass http://localhost:9113/metrics;
        }
        
        location /health {
            return 200 "NGINX monitoring is healthy\n";
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: gametrade
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              name: http
            - containerPort: 443
              name: https
            - containerPort: 8080
              name: monitoring
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: nginx-default-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
            - name: nginx-status-conf
              mountPath: /etc/nginx/conf.d/stub_status.conf
              subPath: stub_status.conf
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 20
        - name: nginx-exporter
          image: nginx/nginx-prometheus-exporter:0.11.0
          args:
            - -nginx.scrape-uri=http://localhost:8080/nginx_status
          ports:
            - containerPort: 9113
              name: metrics
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "64Mi"
              cpu: "100m"
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: nginx-default-conf
          configMap:
            name: nginx-conf
            items:
              - key: default.conf
                path: default.conf
        - name: nginx-status-conf
          configMap:
            name: nginx-conf
            items:
              - key: stub_status.conf
                path: stub_status.conf 